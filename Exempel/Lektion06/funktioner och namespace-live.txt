Funktioner!

Nomenklatur, dvs. termer som används och vad de betyder i sammanhanget:

	Definiera - Att berätta vad något betyder. I Python använder man termen t.ex. är man skapar
				eller ändrar på en variabel.
				Används även när man skapar egna Funktioner och Klasser. Klasser kommer vi gå
				igenom i en senare lektion.
	
	Funktion -	En samling kod som namngivits gör att lätt kunna återanvändas.
				En instruktion till datorn.
	
	Objekt -	En samling av data och instruktioner om hur man interagerar med den.
				T.ex. via metoder som ligger i Objekt eller med operatorer.
				(+, -, *, etc.)
	
	Metod -		En funktion som ligger i ett Objekt. (Eller en Klass, men det är utanför
				grundkursen)
	
	Argument -	Det man skickar till en funktion.
	
	Returnera -	Att skicka tillbaka.

SYNTAX ÄR JÄTTEVIKTIGT


Python är är ett objektorienterat programmeringsspråk.
	Vi kommer att tala mer om Objekt senare i kursen.


Namespaces / Namnrymder är avskiljningar för att hålla namn unika.
	Exempel: Postnummer, epost, telefonnummer
	Exempel: info@misa.se

Funktioner kallas för olika saker i olika programmeringsspråk:
	Funktioner = Procedurer = Subrutiner
	Functions = Processes = Sub-routines

Argument = Det man skickar till en funktion eller metod.
	Man "skickar" Argument genom att skriva in det som ska skickas mellan
	parenteserna när man "anropar" en Funktion.
	
	Positional arguments / Positionsargument
		Argument där ordningen man skriver in dem i spelar STOR roll.
	Keyword arguments / Nyckelordsargument
		Argument där man anger namn på argumenten för att särkilja dem.


Matematiska Funktioner ser väldigt liknande ut som Funktioner i Python:

Matte:
	f(x) = x * 2
	y = x * 2

Python:
	def f(x):
		return x * 2


Designprincip i Python:
	DRY
	Don't Repeat Yourself
	Upprepa Dig Inte
	
	Ska man göra samma sak flera gånger är det alltså bättre att "bryta ut" den
	saken till en Funktion, precis som man använder loopar för att inte behöva
	skriva samma sak om och om igen.